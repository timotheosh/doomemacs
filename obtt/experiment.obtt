# -*- mode: org -*-
#+TITLE: obtt-experiment
#+PROPERTY: header-args :tangle yes :mkdirp yes

This is a snakemake + poetry based template for experimental projects. Heavily
inspired by other /data science/ templates. Most of the experiments use a conda
based setup but this template just uses poetry for now. I will tune this when
needed.

* Variables

- Name :: $1
- Description :: $2

* README

#+BEGIN_SRC org :tangle ./README.org
#+TITLE: $1

$2
#+END_SRC

* toml file

#+BEGIN_SRC toml :tangle ./pyproject.toml
[tool.poetry]
name = "$1"
version = "0.1.0"
description = "$2"
authors = []

[tool.poetry.dependencies]
python = "^3.6"
snakemake = "^5.2"

[tool.poetry.dev-dependencies]
pytest = "^3.0"
mypy = "^0.620.0"
#+END_SRC

* General structure

We have a ~data~ directory with external and processed sub dirs. A ~src~ directory
keeps the modules that we build and use. ~scripts~ keep snakemake scripts.

#+BEGIN_SRC shell :obtt eval
mkdir -p data/external data/processed
mkdir scripts
mkdir src
touch ./src/__init__.py
#+END_SRC

The snakefile rules now bind everything together.

#+BEGIN_SRC python :tangle ./Snakefile
rule all:
    shell: "echo 'hi'"
#+END_SRC

* Testing

Tests are important even in experimental code, blah blah...

#+BEGIN_SRC python :tangle ./tests/__init__.py
#+END_SRC

#+BEGIN_SRC python :tangle ./mypy.ini
[mypy]
ignore_missing_imports=True
#+END_SRC

#+BEGIN_SRC text :tangle ./tox.ini
[tox]
skipsdist = True
envlist = py36

[testenv]
whitelist_externals = poetry
skip_install = true
commands =
    poetry install -v
    poetry run pytest tests/
#+END_SRC

* License

#+BEGIN_SRC shell :obtt eval
gen license:gpl-3.0
#+END_SRC
